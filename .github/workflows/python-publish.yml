name: Upload Python Package

on:
  release:
    types: [published]  # 当创建新的release时触发

permissions:
  contents: read  # 读取仓库内容的权限

jobs:
  release-build:
    runs-on: ubuntu-latest  # 使用最新版Ubuntu运行

    steps:
      # 1. 检出代码
      - uses: actions/checkout@v4

      # 2. 设置Python环境
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"  # 指定Python版本
          cache: 'pip'  # 启用pip缓存

      # 3. 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine pytest

      # 4. 运行测试
      - name: Run tests
        run: |
          python -m pytest

      # 5. 检查版本
      - name: Check version
        run: |
          python -c "import pkg_resources; print(pkg_resources.get_distribution('YOUR_PACKAGE').version)"

      # 6. 构建发布包
      - name: Build release distributions
        run: |
          python -m build

      # 7. 检查构建包
      - name: Check package
        run: |
          twine check dist/*

      # 8. 上传构建产物
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/
          retention-days: 5  # 设置保留天数

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build  # 依赖release-build任务
    permissions:
      id-token: write  # PyPI发布所需权限

    environment:
      name: pypi
      url: https://pypi.org/p/SpiderSwarm  # 替换为您的项目URL

    steps:
      # 1. 下载构建产物
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      # 2. 发布到PyPI
      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          verbose: true  # 添加详细日志
          check_metadata: true  # 检查元数据

      # 3. 发布成功通知
      - name: Notify on success
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: '✅ Package published successfully to PyPI!'
            })

      # 4. 发布失败通知
      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: '❌ Package publishing failed! Please check the logs for details.'
            })
